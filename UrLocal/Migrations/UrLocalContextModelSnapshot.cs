// <auto-generated />
using Data.UrLocal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace UrLocal.Migrations
{
    [DbContext(typeof(UrLocalContext))]
    partial class UrLocalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("UrLocal.Bars", b =>
                {
                    b.Property<int>("barId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("bar_name")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("street_name")
                        .HasColumnType("text");

                    b.Property<int>("street_num")
                        .HasColumnType("integer");

                    b.Property<string>("suburb")
                        .HasColumnType("text");

                    b.HasKey("barId");

                    b.ToTable("bars");
                });

            modelBuilder.Entity("UrLocal.Models.barCheck", b =>
                {
                    b.Property<int>("bar_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("beer")
                        .HasColumnType("boolean");

                    b.Property<bool>("spirit")
                        .HasColumnType("boolean");

                    b.Property<bool>("wine")
                        .HasColumnType("boolean");

                    b.HasKey("bar_id");

                    b.ToTable("bar_check");
                });

            modelBuilder.Entity("UrLocal.Models.barScore", b =>
                {
                    b.Property<int>("bar_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("complexity")
                        .HasColumnType("integer");

                    b.Property<int>("craft_slide")
                        .HasColumnType("integer");

                    b.Property<double>("lqBeer")
                        .HasColumnType("double precision");

                    b.Property<double>("lqMeal")
                        .HasColumnType("double precision");

                    b.Property<double>("uqBeer")
                        .HasColumnType("double precision");

                    b.Property<double>("uqMeal")
                        .HasColumnType("double precision");

                    b.HasKey("bar_id");

                    b.ToTable("bar_score");
                });

            modelBuilder.Entity("UrLocal.Models.userCheck", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("beer")
                        .HasColumnType("boolean");

                    b.Property<bool>("spirit")
                        .HasColumnType("boolean");

                    b.Property<bool>("wine")
                        .HasColumnType("boolean");

                    b.HasKey("user_id");

                    b.ToTable("user_check");
                });

            modelBuilder.Entity("UrLocal.Models.userPref", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("complexity")
                        .HasColumnType("integer");

                    b.Property<int>("craft_slide")
                        .HasColumnType("integer");

                    b.Property<double>("price_range")
                        .HasColumnType("double precision");

                    b.HasKey("user_id");

                    b.ToTable("user_pref");
                });

            modelBuilder.Entity("UrLocal.Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("BeerCheck")
                        .HasColumnType("boolean");

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<double>("PriceRange")
                        .HasColumnType("double precision");

                    b.Property<bool>("SpiritCheck")
                        .HasColumnType("boolean");

                    b.Property<bool>("WineCheck")
                        .HasColumnType("boolean");

                    b.Property<int>("craftSlide")
                        .HasColumnType("integer");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
